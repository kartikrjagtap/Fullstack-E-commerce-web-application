name: Build and push docker images to dockerhub

on:
  push:
    branches: [ "main" ]

#env:
#  AWS_REGION: MY_AWS_REGION                   # set this to your preferred AWS region, e.g. us-west-1
#  ECR_REPOSITORY: MY_ECR_REPOSITORY           # set this to your Amazon ECR repository name
#  ECS_SERVICE: MY_ECS_SERVICE                 # set this to your Amazon ECS service name
#  ECS_CLUSTER: MY_ECS_CLUSTER                 # set this to your Amazon ECS cluster name
#  ECS_TASK_DEFINITION: MY_ECS_TASK_DEFINITION # set this to the path to your Amazon ECS task definition
                                               # file, e.g. .aws/task-definition.json
#  CONTAINER_NAME: MY_CONTAINER_NAME           # set this to the name of the container in the
                                               # containerDefinitions section of your task definition

permissions:
  contents: read

jobs:
  build-push:
    runs-on: ubuntu-latest  # Runs on the latest version of Ubuntu
    steps:
    - name: Set up JDK 21 # Step to set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
        
    - name: Checkout code  # Step to checkout the code from the repository | Fetch the source code repository into the runner machine where our workflow is executing. 
      uses: actions/checkout@v4
      
    - name: Build service-registry with Maven # Step to build the microservice
      working-directory: ./microservice-backend
      run: |
        cd service-registry
        mvn clean install

    - name: build and push the service-registry docker image to dockerhub
      run: |
        docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{secrets.DOCKER_PASSWORD}} 
        docker build -t kartikrj/purely:service-registry .  
        docker push kartikrj/purely:service-registry
      working-directory: ./microservice-backend/service-registry
        
#    - name: Build api-gateway with Maven # Step to build the microservice
#      run: mvn clean install
#      working-directory: ./microservice-backend/api-gateway

#    - name: build and push the api-gateway docker image to dockerhub
#      run: |
#        docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{secrets.DOCKER_PASSWORD}} 
#        docker build -t kartikrj/purely:api-gateway .  
#        docker push kartikrj/purely:api-gateway
#      working-directory: ./microservice-backend/api-gateway
  
